<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hry.trade.entrust.dao.ExEntrustDao">
    <resultMap id="allcolumn" type="hry.trade.entrust.model.ExEntrust">
        <result column="entrustNum" property="entrustNum" javaType="java.lang.String"/>
        <result column="customerId" property="customerId" javaType="java.lang.Long"/>
        <result column="accountId" property="accountId" javaType="java.lang.Long"/>
        <result column="coinCode" property="coinCode" javaType="java.lang.String"/>
        <result column="customerIp" property="customerIp" javaType="java.lang.String"/>
        <result column="type" property="type" javaType="java.lang.Integer"/>
        <result column="status" property="status" javaType="java.lang.Integer"/>
        <result column="entrustPrice" property="entrustPrice" javaType="java.math.BigDecimal"/>
        <result column="entrustCount" property="entrustCount" javaType="java.math.BigDecimal"/>
        <result column="entrustSum" property="entrustSum" javaType="java.math.BigDecimal"/>
        <result column="entrustTime" property="entrustTime" javaType="java.util.Date"/>
        <result column="entrustWay" property="entrustWay" javaType="java.lang.Integer"/>
        <result column="surplusEntrustCount" property="surplusEntrustCount" javaType="java.math.BigDecimal"/>
        <result column="source" property="source" javaType="java.lang.Integer"/>
        <result column="transactionFeeRate" property="transactionFeeRate" javaType="java.math.BigDecimal"/>
        <result column="transactionFee" property="transactionFee" javaType="java.math.BigDecimal"/>
        <result column="transactionSum" property="transactionSum" javaType="java.math.BigDecimal"/>
        <result column="processedPrice" property="processedPrice" javaType="java.math.BigDecimal"/>
        <result column="floatUpPrice" property="floatUpPrice" javaType="java.math.BigDecimal"/>
        <result column="floatDownPrice" property="floatDownPrice" javaType="java.math.BigDecimal"/>
        <result column="surname" property="surname" javaType="java.lang.String"/>
    </resultMap>
    <insert id="insertExEntrust" parameterType="java.util.List">
        insert into ex_entrust
        (floatDownPrice, floatUpPrice, transactionSum,transactionFeeRate,
        source, surplusEntrustCount, entrustWay, entrustTime,entrustSum,entrustCount,
        entrustPrice, status, type, customerIp,coinCode,fixPriceType,fixPriceCoinCode,
        accountId,customerId,entrustNum,transactionFee,userName,coinAccountId,trueName,surName,processedPrice

        )
        values
        <foreach collection="list" item="exEntrust" index="index" separator=",">
            (
            #{exEntrust.floatDownPrice},
            #{exEntrust.floatUpPrice},
            #{exEntrust.transactionSum},
            #{exEntrust.transactionFeeRate},
            #{exEntrust.source},
            #{exEntrust.surplusEntrustCount},
            #{exEntrust.entrustWay},
            #{exEntrust.entrustTime},
            #{exEntrust.entrustSum},
            #{exEntrust.entrustCount},
            #{exEntrust.entrustPrice},
            #{exEntrust.status},
            #{exEntrust.type},
            #{exEntrust.customerIp},
            #{exEntrust.coinCode},
            #{exEntrust.fixPriceType},
            #{exEntrust.fixPriceCoinCode},
            #{exEntrust.accountId},
            #{exEntrust.customerId},
            #{exEntrust.entrustNum},
            #{exEntrust.transactionFee},
            #{exEntrust.userName},
            #{exEntrust.coinAccountId},
            #{exEntrust.trueName},
            #{exEntrust.surName},
            #{exEntrust.processedPrice}

            )
        </foreach>

    </insert>


    <select id="getExEntrustByentrustNum" parameterType="java.lang.String" resultMap="allcolumn">
      
          select * from ex_entrust a  where a.entrustNum=#{entrustNum,jdbcType=VARCHAR} 
        
	</select>
    <select id="getExEntrustListByNums" parameterType="java.util.List" resultMap="allcolumn">

        select * from ex_entrust a
        <where>
            and a.entrustNum in
            <if test="list!=null  ">
                <foreach item="item" index="index" collection="list"
                         open="(" separator="," close=")">
                    #{item.entrustNum}
                </foreach>
            </if>
        </where>
    </select>

    <resultMap id="exEntrustListByNumstoMysqlcolumn" type="hry.trade.entrust.model.ExEntrust">
        <result column="entrustNum" property="entrustNum" javaType="java.lang.String"/>
        <result column="id" property="id" javaType="java.lang.Long"/>

    </resultMap>

    <select id="getExEntrustListByNumstoMysql" parameterType="java.util.List"
            resultMap="exEntrustListByNumstoMysqlcolumn">

        select entrustNum,id from ex_entrust a
        <where>
            and a.entrustNum in
            <if test="list!=null  ">
                <foreach item="item" index="index" collection="list"
                         open="(" separator="," close=")">
                    #{item.entrustNum}
                </foreach>
            </if>
        </where>
    </select>
    <update id="updateExEntrust" parameterType="java.util.List">
        update ex_entrust
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="surplusEntrustCount = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.surplusEntrustCountDouble}
                </foreach>
            </trim>
            <trim prefix="status = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.statusint}
                </foreach>
            </trim>
            <trim prefix="transactionSum = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.transactionSumDouble}
                </foreach>
            </trim>
            <trim prefix="transactionFee = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.transactionFeeDouble}
                </foreach>
            </trim>
            <trim prefix="processedPrice = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.processedPriceDouble}
                </foreach>
            </trim>
            <trim prefix="modified = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.modified}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>


    <select id="getExEdBycustomerId" parameterType="java.util.Map" resultMap="allcolumn">
	
	    select * from ex_entrust a where a.`status`>=2 and a.customerId=#{customerId,jdbcType=BIGINT} limit 0,5;
	</select>


    <resultMap id="entrustingByCustomerId" type="hry.trade.entrust.model.ExEntrust">
        <result column="entrustNum" property="entrustNum" javaType="java.lang.String"/>
        <result column="coinCode" property="coinCode" javaType="java.lang.String"/>
        <result column="type" property="type" javaType="java.lang.Integer"/>
        <result column="fixPriceCoinCode" property="fixPriceCoinCode" javaType="java.lang.String"/>
        <result column="entrustPrice" property="entrustPrice" javaType="java.math.BigDecimal"/>
    </resultMap>
    <select id="getEntrustingByCustomerId" parameterType="java.util.Map" resultMap="entrustingByCustomerId">
        select entrustNum,coinCode,type,fixPriceCoinCode,entrustPrice from ex_entrust a where
        <![CDATA[
	     a.`status`<2 
	      ]]>
        and a.customerId=#{customerId}
        <if test="fixPriceCoinCode!=null and fixPriceCoinCode!='' ">
            and a.fixPriceCoinCode=#{fixPriceCoinCode}
        </if>
        <if test="coinCode!=null and coinCode!='' ">
            and a.coinCode=#{coinCode}
        </if>
        <if test="type!=null and type!='' ">
            and a.type=#{type}
        </if>

    </select>
</mapper>
